{"version":3,"sources":["assets/Ellipse 1.svg","assets/Ellipse 2.svg","redux/reducer.js","redux/index.js","redux/actions.js","components/Todo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","todos","persistedState","localStorage","getItem","JSON","parse","store","createStore","state","action","type","task","payload","complete","filter","obj","arr","i","length","subscribe","setItem","stringify","getState","addTodo","item","changeTodoStatus","deleteFromList","mapDispatchToProps","connect","props","index","className","key","onClick","useState","text","setText","setFilter","toggleInput","setToggleInput","viewAll","e","preventDefault","viewActive","viewComplete","map","onSubmit","placeholder","onChange","target","value","src","disabled","alt","plus","Boolean","window","location","hostname","match","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f2a0dcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ellipse 1.03a3562d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ellipse 2.56f5741a.svg\";","export const initialState = {\n   todos: [\n      // {\n      //    task: \"Clean for 10 minutes\",\n      //    complete: false\n      // },\n      // {\n      //    task: \"plan the special day\",\n      //    complete: false\n      // }, \n   ]\n}\n\nexport default function reducer(state = initialState, action) {\n   switch(action.type) {\n      case \"ADD_TASK\":\n         return {\n            ...state,\n             todos: [\n                ...state.todos,\n               {\n                  task: action.payload,\n                  complete: false\n               }\n         ]}\n      case \"DELETE\":\n         return {\n            ...state,\n            todos: [ \n               ...state.todos.filter(obj => obj !== action.payload)\n            ]\n         }\n      case \"COMPLETE\":\n         let arr = [...state.todos]\n         for(let i = 0; i < arr.length; i++) {\n            if(arr[i] === action.payload) {\n               arr[i].complete = !arr[i].complete \n               break\n            }\n         }\n         return {\n            ...state,\n            todos: [...arr]\n         }\n      default:\n         return state\n   }\n}","import {createStore} from 'redux'\nimport reducer from './reducer'\nimport {initialState} from './reducer'\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : initialState\n\nconst store = createStore(reducer, persistedState)\nstore.subscribe(() => {\n   localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\nexport default store","// action creator functions \nexport function addTodo(item) {\n   return {\n      type: \"ADD_TASK\",\n      payload: item\n   }\n}\nexport function changeTodoStatus(item) {\n   return {\n      type: \"COMPLETE\",\n      payload: item\n   }\n}\nexport function deleteFromList(item) {\n   return {\n      type: \"DELETE\",\n      payload: item\n   }\n}","import React from 'react';\nimport {connect} from 'react-redux'\nimport {addTodo, changeTodoStatus, deleteFromList} from '../redux/actions'\n\nfunction Todo(props) {\n   const item = props.item\n   const index = props.index\n   return(\n      <li className=\"row\" key={index}>\n         <div className=\"col my-auto text-center\">\n            {item.complete ? \n            <i \n               onClick={() => props.changeTodoStatus(item)} \n               className=\"far fa-check-circle status-icon-done\"></i> : \n            <i \n               onClick={() => props.changeTodoStatus(item)} \n               className=\"far fa-circle status-icon\"></i>}\n         </div>\n\n         <div className=\"col-9 mt-3\">\n            {item.complete ? <p className=\"done-task\">{item.task}</p> : <p>{item.task}</p>}\n         </div>\n         \n         <div className=\"col my-auto text-center\">\n            <i \n            onClick={() => props.deleteFromList(item)} \n            className=\"delete far fa-trash-alt\" \n            \n            ></i>\n         </div>\n         \n      </li>)\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n   return {\n     todos: state.todos\n   }\n }\n const mapDispatchToProps = { addTodo, changeTodoStatus, deleteFromList }\n \n \n export default connect(mapStateToProps, mapDispatchToProps)(Todo);\n ","import React, {useState} from 'react';\nimport {connect} from 'react-redux'\nimport {addTodo, changeTodoStatus, deleteFromList} from './redux/actions'\nimport './App.css';\nimport plus from './assets/Ellipse 1.svg'\nimport disabled from './assets/Ellipse 2.svg'\nimport Todo from './components/Todo'\n\nfunction App(props){\n  const [text, setText] = useState(\"\")\n  const [filter, setFilter] = useState(\"ALL\")\n  const [toggleInput, setToggleInput] = useState(false)\n\n  const viewAll = (e) => {\n    e.preventDefault()\n    setFilter(\"ALL\")\n  }\n\n  const viewActive = (e) => {\n    e.preventDefault()\n    setFilter(\"ACTIVE\")\n  }\n\n  const viewComplete = (e) => {\n    e.preventDefault()\n    setFilter(\"COMPLETE\")\n  }\n\n  const handleSubmit = (e) => {\n    setText(e.target.value)\n  }\n\n  const submit = (e) => {\n    e.preventDefault()\n    props.addTodo(text)\n    setText(\"\")\n    setToggleInput(false)\n  }\n\n  const styleAll = () => {\n    if(filter === \"ALL\") {\n      return <p className=\"filter-title-clicked\" onClick={viewAll}>All</p>  \n    } else {\n      return <p className=\"filter-title\" onClick={viewAll}>All</p>  \n    }\n  }\n\n  const styleAct = () => {\n    if(filter === \"ACTIVE\") {\n      return <p className=\"filter-title-clicked\" onClick={viewActive}>Active</p>  \n    } else {\n      return <p className=\"filter-title\" onClick={viewActive}>Active</p>  \n    }\n  }\n\n  const styleComplete = () => {\n    if(filter === \"COMPLETE\") {\n      return <p className=\"filter-title-clicked\" onClick={viewComplete}>Completed</p>  \n    } else {\n      return <p className=\"filter-title\" onClick={viewComplete}>Completed</p>  \n    }\n  }\n\n  return(\n    <div className=\"App-header\">\n      <h1 className=\"title\">Tasks</h1>\n      <ul>\n        <div className=\"container list\">\n        {props.todos.length < 1 ? <div><p>Add some tasks below!! :D</p></div> : \n          props.todos.map((item, index) => \n            {\n              switch(filter) {\n                case \"ALL\": return (\n                  <Todo item={item} index={index}/>\n                )\n                case \"ACTIVE\": return (\n                  !item.complete ? <Todo item={item} index={index}/> : null \n                )\n                case \"COMPLETE\": return (\n                  item.complete ? <Todo item={item} index={index}/> : null \n                )\n                default:\n                  return null\n              }\n            }\n        )}\n        {/* have another li element be the disappearing input box, depending on plus button being pressed */}\n        {toggleInput ? \n          <li className=\"row hover-and-input\" key={props.todos.length + 2}>\n            <div className=\"col my-auto text-center\">\n              <i className=\"far fa-circle status-icon\"></i>\n            </div>\n            <div className=\"col-9\">\n              <form onSubmit={submit}>\n                <input className=\"input\" type=\"text\" placeholder=\"Enter task here\" onChange={handleSubmit} value={text} />\n                <button className=\"submit\" type=\"submit\"><i className=\"fas fa-file-medical\"></i></button>\n              </form>\n            </div>\n            <div className=\"col\"></div>\n          </li> : null}\n        </div>\n        \n      </ul>\n      \n{/* maybe use filter state as a way to check which color the filter tabs should be */}\n      <div className=\"container fixed-bottom footer\">\n        <div className=\"row\">\n          <div className=\"col text-center my-auto\">\n            {styleAll()}  \n          </div>\n          <div className=\"col text-center my-auto\">\n            {styleAct()}\n          </div>\n          <div className=\"col text-center my-auto\">\n            {styleComplete()}\n          </div>\n          <div className=\"col text-center\">\n            {filter === \"COMPLETE\" ?\n              <img src={disabled} alt=\"disabled button\"/> :\n              <img onClick={() => setToggleInput(!toggleInput)} src={plus} alt=\"add button\"/>}\n          </div>\n        </div>\n        \n      </div>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    todos: state.todos\n  }\n}\nconst mapDispatchToProps = { addTodo, changeTodoStatus, deleteFromList }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux'\nimport store from './redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconsole.log(store)\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}